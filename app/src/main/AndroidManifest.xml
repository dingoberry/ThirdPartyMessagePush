<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="push.optimizer.dx.op.mixpushdemo">

    <uses-permission android:name="android.permission.READ_PHONE_STATE" />

    <!-- HMS-SDK引导升级HMS功能，访问OTA服务器需要网络权限 -->
    <uses-permission android:name="android.permission.INTERNET" />
    <!-- HMS-SDK引导升级HMS功能，保存下载的升级包需要SD卡写权限 -->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <!-- 检测网络状态 -->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <!-- 检测wifi状态 -->
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <!-- 为了获取用户手机的IMEI，用来唯一的标识用户。 -->
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />

    <!-- 如果是安卓8.0，应用编译配置的targetSdkVersion>=26，请务必添加以下权限 -->
    <uses-permission android:name="android.permission.REQUEST_INSTALL_PACKAGES" />
    <uses-permission android:name="android.permission.GET_TASKS" />
    <uses-permission android:name="android.permission.GET_ACCOUNTS" />
    <uses-permission android:name="android.permission.VIBRATE" />

    <permission
        android:name="push.optimizer.dx.op.mixpushdemo.permission.MIPUSH_RECEIVE"
        android:protectionLevel="signature" />

    <!-- 这里com.xiaomi.mipushdemo改成app的包名 -->
    <uses-permission android:name="push.optimizer.dx.op.mixpushdemo.permission.MIPUSH_RECEIVE" />
    <!-- 这里com.xiaomi.mipushdemo改成app的包名 -->


    <!-- 兼容flyme5.0以下版本，魅族内部集成pushSDK必填，不然无法收到消息 -->
    <uses-permission android:name="com.meizu.flyme.push.permission.RECEIVE" />

    <permission
        android:name="push.optimizer.dx.op.mixpushdemo.push.permission.MESSAGE"
        android:protectionLevel="signature" />

    <uses-permission android:name="push.optimizer.dx.op.mixpushdemo.push.permission.MESSAGE" />

    <!-- 兼容flyme3.0配置权限 -->
    <uses-permission android:name="com.meizu.c2dm.permission.RECEIVE" />

    <permission
        android:name="push.optimizer.dx.op.mixpushdemo.permission.C2D_MESSAGE"
        android:protectionLevel="signature" />

    <uses-permission android:name="push.optimizer.dx.op.mixpushdemo.permission.C2D_MESSAGE" />

    <application
        android:name=".MyApplication"
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <meta-data
            android:name="com.huawei.hms.client.appid"
            android:value="appid=100236133" />

        <activity android:name=".MainActivity"
            android:windowSoftInputMode="adjustUnspecified">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <!-- START-FLYME MODULE -->
        <!-- push应用定义消息receiver声明 -->
        <receiver
            android:name=".FlymePushReceiver"
            android:process=":dxopt">
            <intent-filter>

                <!-- 接收push消息 -->
                <action android:name="com.meizu.flyme.push.intent.MESSAGE" />
                <!-- 接收register消息 -->
                <action android:name="com.meizu.flyme.push.intent.REGISTER.FEEDBACK" />
                <!-- 接收unregister消息 -->
                <action android:name="com.meizu.flyme.push.intent.UNREGISTER.FEEDBACK" />
                <!-- 兼容低版本Flyme3推送服务配置 -->
                <action android:name="com.meizu.c2dm.intent.REGISTRATION" />
                <action android:name="com.meizu.c2dm.intent.RECEIVE" />

                <category android:name="push.optimizer.dx.op.mixpushdemo" />
            </intent-filter>
        </receiver>
        <!-- END-FLYME MODULE -->


        <!-- START-XIAOMI MODULE -->
        <service
            android:name="com.xiaomi.push.service.XMPushService"
            android:enabled="true"
            android:process=":dxopt" />
        <service
            android:name="com.xiaomi.push.service.XMJobService"
            android:enabled="true"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE"
            android:process=":dxopt" /> <!-- 注：此service必须在3.0.1版本以后（包括3.0.1版本）加入 -->
        <service
            android:name="com.xiaomi.mipush.sdk.PushMessageHandler"
            android:enabled="true"
            android:exported="true"
            android:process=":dxopt" />
        <service
            android:name="com.xiaomi.mipush.sdk.MessageHandleService"
            android:enabled="true"
            android:process=":dxopt" /> <!-- 注：此service必须在2.2.5版本以后（包括2.2.5版本）加入 -->
        <receiver
            android:name="com.xiaomi.push.service.receivers.NetworkStatusReceiver"
            android:exported="true"
            android:process=":dxopt">
            <intent-filter>
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="com.xiaomi.push.service.receivers.PingReceiver"
            android:exported="false"
            android:process=":dxopt">
            <intent-filter>
                <action android:name="com.xiaomi.push.PING_TIMER" />
            </intent-filter>
        </receiver>
        <receiver
            android:name=".XiaoMiReceiver"
            android:exported="true"
            android:process=":dxopt">
            <intent-filter>
                <action android:name="com.xiaomi.mipush.RECEIVE_MESSAGE" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.xiaomi.mipush.MESSAGE_ARRIVED" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.xiaomi.mipush.ERROR" />
            </intent-filter>
        </receiver>
        <!-- END-XIAOMI MODULE -->


        <!-- START-华为MODULE -->
        <!-- 接入HMSSDK 需要注册的activity | Access HMSSDK activity to be registered -->
        <activity
            android:name="com.huawei.hms.activity.BridgeActivity"
            android:configChanges="orientation|locale|screenSize|layoutDirection|fontScale"
            android:excludeFromRecents="true"
            android:exported="false"
            android:hardwareAccelerated="true"
            android:theme="@android:style/Theme.Translucent">
            <meta-data
                android:name="hwc-theme"
                android:value="androidhwext:style/Theme.Emui.Translucent" />
        </activity>

        <!-- 接入HMSSDK 需要注册的activity | Access HMSSDK activity to be registered -->
        <activity
            android:name="com.huawei.updatesdk.service.otaupdate.AppUpdateActivity"
            android:configChanges="orientation|screenSize"
            android:exported="false"
            android:theme="@style/upsdkDlDialog">
            <meta-data
                android:name="hwc-theme"
                android:value="androidhwext:style/Theme.Emui.Translucent.NoTitleBar" />
        </activity>

        <!-- 接入HMSSDK 需要注册的activity | Access HMSSDK activity to be registered -->
        <activity
            android:name="com.huawei.updatesdk.support.pm.PackageInstallerActivity"
            android:configChanges="orientation|keyboardHidden|screenSize"
            android:exported="false"
            android:theme="@style/upsdkDlDialog">
            <meta-data
                android:name="hwc-theme"
                android:value="androidhwext:style/Theme.Emui.Translucent" />
        </activity>

        <!--
             接入HMSSDK 需要注册的provider，authorities 一定不能与其他应用一样，所以这边 push.optimizer.dx.op.mixpushdemo 要替换上您应用的包名
             Access HMSSDK need to register provider,authorities must not be the same as other applications, so this side ${package_name} to replace the package name you applied
        -->
        <provider
            android:name="com.huawei.hms.update.provider.UpdateProvider"
            android:authorities="push.optimizer.dx.op.mixpushdemo.hms.update.provider"
            android:exported="false"
            android:grantUriPermissions="true"
            android:process=":dxopt" />

        <!--
           接入HMSSDK 需要注册的provider，authorities 一定不能与其他应用一样，所以这边 push.optimizer.dx.op.mixpushdemo 要替换上您应用的包名
           Access HMSSDK need to register provider,authorities must not be the same as other applications, so this side ${package_name} to replace the package name you applied
        -->
        <provider
            android:name="com.huawei.updatesdk.fileprovider.UpdateSdkFileProvider"
            android:authorities="push.optimizer.dx.op.mixpushdemo.updateSdk.fileProvider"
            android:exported="false"
            android:grantUriPermissions="true"
            android:process=":dxopt" />

        <!-- 接入HMSSDK 需要注册的应用下载服务 | Access HMSSDK need to register app download service -->
        <service
            android:name="com.huawei.updatesdk.service.deamon.download.DownloadService"
            android:exported="false"
            android:process=":dxopt" />

        <!-- 接入HMSSDK PUSH模块需要注册 :接收通道发来的通知栏消息 | The access HMSSDK push module needs to be registered: the notification bar message sent from the receiving channel -->
        <receiver
            android:name="com.huawei.hms.support.api.push.PushEventReceiver"
            android:process=":dxopt">
            <intent-filter>
                <action android:name="com.huawei.intent.action.PUSH" />
            </intent-filter>
        </receiver>

        <!-- 使用 HMSAgent 代码接入HMSSDK 需要注册的activity | Use hmsagent code to access HMSSDK activity that requires registration -->
        <activity
            android:name="com.huawei.android.hms.agent.common.HMSAgentActivity"
            android:configChanges="orientation|locale|screenSize|layoutDirection|fontScale"
            android:excludeFromRecents="true"
            android:exported="false"
            android:hardwareAccelerated="true"
            android:theme="@android:style/Theme.Translucent">
            <meta-data
                android:name="hwc-theme"
                android:value="androidhwext:style/Theme.Emui.Translucent" />
        </activity>

        <!--
             接入HMSSDK PUSH模块需要注册，第三方相关 :接收Push消息（注册、Push消息、Push连接状态）广播，
                     此receiver类需要开发者自己创建并继承com.huawei.hms.support.api.push.PushReceiver类，
                     参考示例代码中的类：com.huawei.hmsagent.HuaweiPushRevicer
                 Access to the HMSSDK push module requires registration:
                     Receive push message (registration, push message, push connection state) broadcast.
                     This receiver class requires the developer to create and inherit the com.huawei.hms.support.api.push.PushReceiver class.
                     Reference to class in sample code: Com.huawei.hmsagent.HuaweiPushRevicer
        -->
        <receiver
            android:name=".HuaweiPushReceiver"
            android:exported="false"
            android:process=":dxopt">
            <intent-filter>

                <!-- 必须,用于接收token | Must， for receiving token -->
                <action android:name="com.huawei.android.push.intent.REGISTRATION" />
                <!-- 必须，用于接收消息 | Must， used to receive messages -->
                <action android:name="com.huawei.android.push.intent.RECEIVE" />
                <!-- 可选，用于点击通知栏或通知栏上的按钮后触发onEvent回调 | Optional, click the button on the notification bar or the notification bar to trigger the onevent callback -->
                <action android:name="com.huawei.android.push.intent.CLICK" />
                <!-- 可选，查看push通道是否连接，不查看则不需要 | Optional, query whether the push channel is connected or not -->
                <action android:name="com.huawei.intent.action.PUSH_STATE" />
            </intent-filter>
        </receiver>
        <!-- END-华为MODULE -->
        <activity android:name=".TestActivity" />

        <service
            android:name=".MyService"
            android:enabled="true"
            android:process=":dxopt"
            android:exported="false"/>
    </application>

</manifest>